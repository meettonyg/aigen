<?php\n/**\n * Authority Hook Service Test Script\n * \n * Run this script to test the centralized Authority Hook Service functionality\n * Place in plugin root and access via: /wp-content/plugins/media-kit-content-generator/test-authority-hook-service.php\n */\n\n// Prevent direct access outside WordPress\nif (!defined('ABSPATH')) {\n    // For testing purposes, let's allow direct access with WordPress bootstrap\n    $wp_root = dirname(dirname(dirname(dirname(__FILE__))));\n    require_once($wp_root . '/wp-load.php');\n}\n\n// Ensure user has proper permissions\nif (!current_user_can('administrator')) {\n    wp_die('Insufficient permissions to run this test.');\n}\n\n// Test the Authority Hook Service\nfunction test_authority_hook_service() {\n    $results = [];\n    \n    // Test 1: Service Class Exists\n    $results['service_class_exists'] = class_exists('MKCG_Authority_Hook_Service');\n    \n    if ($results['service_class_exists']) {\n        // Test 2: Service Instantiation\n        try {\n            $service = new MKCG_Authority_Hook_Service();\n            $results['service_instantiation'] = true;\n        } catch (Exception $e) {\n            $results['service_instantiation'] = false;\n            $results['instantiation_error'] = $e->getMessage();\n        }\n        \n        if (isset($service)) {\n            // Test 3: Default Data Generation\n            $default_data = $service->get_authority_hook_data(0); // No post ID\n            $results['default_data'] = $default_data;\n            \n            // Test 4: HTML Rendering\n            try {\n                $html = $service->render_authority_hook_builder('test', [\n                    'who' => 'test users',\n                    'what' => 'achieve test goals',\n                    'when' => 'during testing',\n                    'how' => 'through automated tests'\n                ]);\n                $results['html_rendering'] = !empty($html);\n                $results['html_length'] = strlen($html);\n            } catch (Exception $e) {\n                $results['html_rendering'] = false;\n                $results['html_error'] = $e->getMessage();\n            }\n            \n            // Test 5: Complete Hook Building\n            $components = [\n                'who' => 'SaaS founders',\n                'what' => 'scale their business',\n                'when' => 'they are ready to grow',\n                'how' => 'through proven systems'\n            ];\n            $complete_hook = $service->build_complete_hook($components);\n            $results['complete_hook'] = $complete_hook;\n            $results['complete_hook_valid'] = strpos($complete_hook, 'I help') === 0;\n            \n            // Test 6: Validation\n            $validation = $service->validate_authority_hook($components);\n            $results['validation'] = $validation;\n            \n            // Test 7: Field Mappings\n            $reflection = new ReflectionClass($service);\n            $property = $reflection->getProperty('field_mappings');\n            $property->setAccessible(true);\n            $field_mappings = $property->getValue($service);\n            $results['field_mappings'] = $field_mappings;\n        }\n    }\n    \n    return $results;\n}\n\n// Test WordPress Integration\nfunction test_wordpress_integration() {\n    $results = [];\n    \n    // Test 1: Plugin Instance\n    $plugin = Media_Kit_Content_Generator::get_instance();\n    $results['plugin_instance'] = !is_null($plugin);\n    \n    if ($plugin) {\n        // Test 2: Service Getter\n        $service = $plugin->get_authority_hook_service();\n        $results['service_getter'] = !is_null($service);\n        $results['service_type'] = get_class($service);\n        \n        // Test 3: AJAX Hooks Registration\n        $results['ajax_hooks'] = [\n            'save' => has_action('wp_ajax_mkcg_save_authority_hook'),\n            'get' => has_action('wp_ajax_mkcg_get_authority_hook'),\n            'validate' => has_action('wp_ajax_mkcg_validate_authority_hook')\n        ];\n    }\n    \n    return $results;\n}\n\n// Test JavaScript Integration\nfunction test_javascript_integration() {\n    $results = [];\n    \n    // Check if JavaScript files exist\n    $js_files = [\n        'authority-hook-service-integration.js' => MKCG_PLUGIN_PATH . 'assets/js/authority-hook-service-integration.js',\n        'authority-hook-builder.js' => MKCG_PLUGIN_PATH . 'assets/js/authority-hook-builder.js'\n    ];\n    \n    foreach ($js_files as $name => $path) {\n        $results['js_files'][$name] = [\n            'exists' => file_exists($path),\n            'size' => file_exists($path) ? filesize($path) : 0,\n            'readable' => file_exists($path) && is_readable($path)\n        ];\n    }\n    \n    return $results;\n}\n\n// Run all tests\n$test_results = [\n    'service_tests' => test_authority_hook_service(),\n    'wordpress_integration' => test_wordpress_integration(),\n    'javascript_integration' => test_javascript_integration(),\n    'timestamp' => current_time('mysql'),\n    'wp_version' => get_bloginfo('version'),\n    'php_version' => PHP_VERSION\n];\n\n// Calculate overall success rate\nfunction calculate_success_rate($results) {\n    $total = 0;\n    $passed = 0;\n    \n    foreach ($results as $section => $tests) {\n        if (is_array($tests)) {\n            foreach ($tests as $test => $result) {\n                if (is_bool($result)) {\n                    $total++;\n                    if ($result) $passed++;\n                } elseif (is_array($result) && isset($result['exists'])) {\n                    $total++;\n                    if ($result['exists']) $passed++;\n                }\n            }\n        }\n    }\n    \n    return $total > 0 ? round(($passed / $total) * 100, 1) : 0;\n}\n\n$success_rate = calculate_success_rate($test_results);\n\n// Output results\nheader('Content-Type: text/html; charset=utf-8');\n?>\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Authority Hook Service Test Results</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f1f1f1; }\n        .container { max-width: 1000px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n        .success { color: #27ae60; font-weight: bold; }\n        .fail { color: #e74c3c; font-weight: bold; }\n        .warning { color: #f39c12; font-weight: bold; }\n        pre { background: #f8f9fa; padding: 15px; border-radius: 4px; border-left: 4px solid #007cba; overflow-x: auto; }\n        .test-section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 4px; }\n        .test-section h3 { margin-top: 0; color: #0073aa; }\n        .overall-score { font-size: 24px; text-align: center; padding: 20px; margin: 20px 0; border-radius: 8px; }\n        .score-excellent { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }\n        .score-good { background: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }\n        .score-poor { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }\n        table { width: 100%; border-collapse: collapse; margin: 10px 0; }\n        th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }\n        th { background-color: #f2f2f2; font-weight: bold; }\n        .status-pass { color: #27ae60; }\n        .status-fail { color: #e74c3c; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>üîß Authority Hook Service Test Results</h1>\n        \n        <div class=\"overall-score <?php \n            if ($success_rate >= 90) echo 'score-excellent';\n            elseif ($success_rate >= 70) echo 'score-good';\n            else echo 'score-poor';\n        ?>\">\n            <strong>Overall Success Rate: <?php echo $success_rate; ?>%</strong>\n            <br><small>Tested on <?php echo $test_results['timestamp']; ?></small>\n        </div>\n        \n        <!-- Service Tests -->\n        <div class=\"test-section\">\n            <h3>üèóÔ∏è Service Functionality Tests</h3>\n            <table>\n                <tr><th>Test</th><th>Status</th><th>Details</th></tr>\n                <tr>\n                    <td>Service Class Exists</td>\n                    <td class=\"<?php echo $test_results['service_tests']['service_class_exists'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['service_tests']['service_class_exists'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td>MKCG_Authority_Hook_Service class</td>\n                </tr>\n                <tr>\n                    <td>Service Instantiation</td>\n                    <td class=\"<?php echo $test_results['service_tests']['service_instantiation'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['service_tests']['service_instantiation'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td><?php echo isset($test_results['service_tests']['instantiation_error']) ? $test_results['service_tests']['instantiation_error'] : 'Service created successfully'; ?></td>\n                </tr>\n                <tr>\n                    <td>HTML Rendering</td>\n                    <td class=\"<?php echo $test_results['service_tests']['html_rendering'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['service_tests']['html_rendering'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td><?php echo isset($test_results['service_tests']['html_length']) ? $test_results['service_tests']['html_length'] . ' characters' : 'Rendering failed'; ?></td>\n                </tr>\n                <tr>\n                    <td>Complete Hook Building</td>\n                    <td class=\"<?php echo $test_results['service_tests']['complete_hook_valid'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['service_tests']['complete_hook_valid'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td><?php echo htmlspecialchars($test_results['service_tests']['complete_hook']); ?></td>\n                </tr>\n            </table>\n        </div>\n        \n        <!-- WordPress Integration -->\n        <div class=\"test-section\">\n            <h3>üîå WordPress Integration Tests</h3>\n            <table>\n                <tr><th>Test</th><th>Status</th><th>Details</th></tr>\n                <tr>\n                    <td>Plugin Instance</td>\n                    <td class=\"<?php echo $test_results['wordpress_integration']['plugin_instance'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['wordpress_integration']['plugin_instance'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td>Media_Kit_Content_Generator instance</td>\n                </tr>\n                <tr>\n                    <td>Service Getter</td>\n                    <td class=\"<?php echo $test_results['wordpress_integration']['service_getter'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $test_results['wordpress_integration']['service_getter'] ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td><?php echo $test_results['wordpress_integration']['service_type']; ?></td>\n                </tr>\n                <tr>\n                    <td>AJAX Hooks</td>\n                    <td class=\"<?php \n                        $ajax_all_pass = $test_results['wordpress_integration']['ajax_hooks']['save'] && \n                                         $test_results['wordpress_integration']['ajax_hooks']['get'] && \n                                         $test_results['wordpress_integration']['ajax_hooks']['validate'];\n                        echo $ajax_all_pass ? 'status-pass' : 'status-fail'; \n                    ?>\">\n                        <?php echo $ajax_all_pass ? '‚úÖ PASS' : '‚ùå FAIL'; ?>\n                    </td>\n                    <td>\n                        Save: <?php echo $test_results['wordpress_integration']['ajax_hooks']['save'] ? '‚úÖ' : '‚ùå'; ?> | \n                        Get: <?php echo $test_results['wordpress_integration']['ajax_hooks']['get'] ? '‚úÖ' : '‚ùå'; ?> | \n                        Validate: <?php echo $test_results['wordpress_integration']['ajax_hooks']['validate'] ? '‚úÖ' : '‚ùå'; ?>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        \n        <!-- JavaScript Integration -->\n        <div class=\"test-section\">\n            <h3>üìú JavaScript Integration Tests</h3>\n            <table>\n                <tr><th>File</th><th>Status</th><th>Size</th><th>Readable</th></tr>\n                <?php foreach ($test_results['javascript_integration']['js_files'] as $name => $info): ?>\n                <tr>\n                    <td><?php echo $name; ?></td>\n                    <td class=\"<?php echo $info['exists'] ? 'status-pass' : 'status-fail'; ?>\">\n                        <?php echo $info['exists'] ? '‚úÖ EXISTS' : '‚ùå MISSING'; ?>\n                    </td>\n                    <td><?php echo $info['exists'] ? number_format($info['size']) . ' bytes' : 'N/A'; ?></td>\n                    <td><?php echo $info['readable'] ? '‚úÖ' : '‚ùå'; ?></td>\n                </tr>\n                <?php endforeach; ?>\n            </table>\n        </div>\n        \n        <!-- Validation Results -->\n        <?php if (isset($test_results['service_tests']['validation'])): ?>\n        <div class=\"test-section\">\n            <h3>‚úÖ Validation Test Results</h3>\n            <pre><?php echo json_encode($test_results['service_tests']['validation'], JSON_PRETTY_PRINT); ?></pre>\n        </div>\n        <?php endif; ?>\n        \n        <!-- Field Mappings -->\n        <?php if (isset($test_results['service_tests']['field_mappings'])): ?>\n        <div class=\"test-section\">\n            <h3>üóÇÔ∏è Field Mappings Configuration</h3>\n            <pre><?php echo json_encode($test_results['service_tests']['field_mappings'], JSON_PRETTY_PRINT); ?></pre>\n        </div>\n        <?php endif; ?>\n        \n        <!-- System Information -->\n        <div class=\"test-section\">\n            <h3>üíª System Information</h3>\n            <table>\n                <tr><th>Component</th><th>Version</th></tr>\n                <tr><td>WordPress</td><td><?php echo $test_results['wp_version']; ?></td></tr>\n                <tr><td>PHP</td><td><?php echo $test_results['php_version']; ?></td></tr>\n                <tr><td>Plugin Path</td><td><?php echo MKCG_PLUGIN_PATH; ?></td></tr>\n                <tr><td>Plugin URL</td><td><?php echo MKCG_PLUGIN_URL; ?></td></tr>\n            </table>\n        </div>\n        \n        <!-- JavaScript Test -->\n        <div class=\"test-section\">\n            <h3>üß™ Live JavaScript Test</h3>\n            <p>Open browser console to see JavaScript service integration test results.</p>\n            <button onclick=\"runJavaScriptTests()\">Run JavaScript Tests</button>\n            <div id=\"js-test-results\"></div>\n        </div>\n        \n        <script>\n        function runJavaScriptTests() {\n            console.log('üß™ Running JavaScript Authority Hook Service Tests...');\n            \n            const results = [];\n            \n            // Test 1: Service Manager exists\n            results.push({\n                test: 'AuthorityHookServiceManager exists',\n                pass: typeof window.AuthorityHookServiceManager !== 'undefined',\n                details: typeof window.AuthorityHookServiceManager\n            });\n            \n            // Test 2: API exists\n            results.push({\n                test: 'AuthorityHookAPI exists',\n                pass: typeof window.AuthorityHookAPI !== 'undefined',\n                details: typeof window.AuthorityHookAPI\n            });\n            \n            // Test 3: AJAX configuration\n            if (window.mkcg_vars) {\n                results.push({\n                    test: 'AJAX configuration loaded',\n                    pass: !!window.mkcg_vars.ajax_url,\n                    details: window.mkcg_vars.ajax_url || 'Not loaded'\n                });\n            }\n            \n            // Display results\n            const resultsDiv = document.getElementById('js-test-results');\n            let html = '<h4>JavaScript Test Results:</h4><ul>';\n            results.forEach(result => {\n                html += `<li><strong>${result.test}:</strong> <span class=\"${result.pass ? 'success' : 'fail'}\">${result.pass ? '‚úÖ PASS' : '‚ùå FAIL'}</span> (${result.details})</li>`;\n            });\n            html += '</ul>';\n            resultsDiv.innerHTML = html;\n            \n            console.log('‚úÖ JavaScript tests complete:', results);\n        }\n        \n        // Auto-run JavaScript tests\n        document.addEventListener('DOMContentLoaded', runJavaScriptTests);\n        </script>\n        \n        <p><small><strong>Note:</strong> This test script verifies the Authority Hook Service implementation. All tests should pass for proper functionality.</small></p>\n    </div>\n</body>\n</html>\n