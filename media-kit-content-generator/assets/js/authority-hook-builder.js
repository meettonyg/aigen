/**
 * Authority Hook Builder - SIMPLIFIED & FIXED
 * Fixes: Clear buttons, Multi-audience tags, Example chip adding
 */

(function() {
  'use strict';
  
  let selectedAudiences = [];
  
  /**
   * Initialize Authority Hook Builder
   */
  function initAuthorityHookBuilder() {
    console.log('üöÄ Authority Hook Builder initializing...');
    
    // Initialize audience tag system
    initAudienceTagSystem();
    
    // Set up field clear buttons
    setupFieldClearButtons();
    
    // Set up example chip adding
    setupExampleChips();
    
    // Set up live Authority Hook updates
    setupLiveUpdates();
    
    // Load existing data
    loadExistingAudiences();
    
    console.log('‚úÖ Authority Hook Builder ready!');
  }
  
  /**
   * Initialize audience tag system with add/remove functionality
   */
  function initAudienceTagSystem() {
    const tagInput = document.getElementById('tag_input');\n    const addButton = document.getElementById('add_tag');\n    const tagContainer = document.getElementById('tags_container');\n    const whoField = document.getElementById('mkcg-who');\n    \n    if (!tagInput || !addButton || !tagContainer || !whoField) {\n      console.log('‚ö†Ô∏è Audience tag elements not found');\n      return;\n    }\n    \n    // Add tag function\n    window.addAudienceTag = function(text, checked = true) {\n      const trimmed = text.trim();\n      if (!trimmed) return;\n      \n      // Check for duplicates\n      if (selectedAudiences.includes(trimmed)) {\n        console.log('Duplicate audience:', trimmed);\n        return;\n      }\n      \n      // Add to array\n      selectedAudiences.push(trimmed);\n      \n      // Create tag element\n      const tagEl = document.createElement('div');\n      tagEl.className = 'audience-tag';\n      tagEl.style.cssText = `\n        display: inline-flex;\n        align-items: center;\n        background: #2196f3;\n        color: white;\n        padding: 6px 12px;\n        border-radius: 20px;\n        margin: 4px;\n        font-size: 14px;\n      `;\n      \n      tagEl.innerHTML = `\n        <input type=\"checkbox\" ${checked ? 'checked' : ''} style=\"margin-right: 8px;\">\n        <span>${escapeHtml(trimmed)}</span>\n        <span style=\"margin-left: 8px; cursor: pointer; font-weight: bold;\" onclick=\"removeAudienceTag('${escapeHtml(trimmed)}')\">&times;</span>\n      `;\n      \n      // Add change listener to checkbox\n      const checkbox = tagEl.querySelector('input[type=\"checkbox\"]');\n      checkbox.addEventListener('change', updateWhoField);\n      \n      tagContainer.appendChild(tagEl);\n      updateWhoField();\n      updateStatus();\n      \n      console.log('‚úÖ Added audience:', trimmed);\n    };\n    \n    // Remove tag function\n    window.removeAudienceTag = function(text) {\n      selectedAudiences = selectedAudiences.filter(a => a !== text);\n      \n      // Remove from DOM\n      const tags = tagContainer.querySelectorAll('.audience-tag');\n      tags.forEach(tag => {\n        if (tag.querySelector('span').textContent === text) {\n          tag.remove();\n        }\n      });\n      \n      updateWhoField();\n      updateStatus();\n      console.log('üóëÔ∏è Removed audience:', text);\n    };\n    \n    // Update WHO field with checked audiences\n    function updateWhoField() {\n      const checkedAudiences = [];\n      const tags = tagContainer.querySelectorAll('.audience-tag');\n      \n      tags.forEach(tag => {\n        const checkbox = tag.querySelector('input[type=\"checkbox\"]');\n        const text = tag.querySelector('span').textContent;\n        \n        if (checkbox.checked) {\n          checkedAudiences.push(text);\n        }\n      });\n      \n      // Format with commas and \"and\"\n      let formattedText = '';\n      if (checkedAudiences.length === 0) {\n        formattedText = '';\n      } else if (checkedAudiences.length === 1) {\n        formattedText = checkedAudiences[0];\n      } else if (checkedAudiences.length === 2) {\n        formattedText = checkedAudiences.join(' and ');\n      } else {\n        const last = checkedAudiences.pop();\n        formattedText = checkedAudiences.join(', ') + ', and ' + last;\n      }\n      \n      whoField.value = formattedText;\n      whoField.dispatchEvent(new Event('input', { bubbles: true }));\n      updateAuthorityHook();\n    }\n    \n    // Update status counters\n    function updateStatus() {\n      const total = selectedAudiences.length;\n      const checked = tagContainer.querySelectorAll('input[type=\"checkbox\"]:checked').length;\n      \n      const audienceCount = document.getElementById('audience-count');\n      const selectedCount = document.getElementById('selected-count');\n      \n      if (audienceCount) audienceCount.textContent = total;\n      if (selectedCount) selectedCount.textContent = checked;\n    }\n    \n    // Add button click\n    addButton.addEventListener('click', function() {\n      const text = tagInput.value.trim();\n      if (text) {\n        window.addAudienceTag(text);\n        tagInput.value = '';\n      }\n    });\n    \n    // Enter key in input\n    tagInput.addEventListener('keypress', function(e) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        const text = tagInput.value.trim();\n        if (text) {\n          window.addAudienceTag(text);\n          tagInput.value = '';\n        }\n      }\n    });\n  }\n  \n  /**\n   * Setup field clear buttons (X buttons)\n   */\n  function setupFieldClearButtons() {\n    document.addEventListener('click', function(e) {\n      if (e.target.classList.contains('field__clear')) {\n        const fieldId = e.target.getAttribute('data-field-id');\n        \n        if (fieldId === 'mkcg-who') {\n          // Clear all audience tags\n          selectedAudiences = [];\n          const tagContainer = document.getElementById('tags_container');\n          if (tagContainer) {\n            tagContainer.innerHTML = '';\n          }\n          const whoField = document.getElementById('mkcg-who');\n          if (whoField) {\n            whoField.value = '';\n          }\n          console.log('üóëÔ∏è Cleared all audiences');\n        } else {\n          // Clear other fields normally\n          const field = document.getElementById(fieldId);\n          if (field) {\n            field.value = '';\n            field.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n        \n        updateAuthorityHook();\n      }\n    });\n  }\n  \n  /**\n   * Setup example chip adding (+ Add buttons)\n   */\n  function setupExampleChips() {\n    document.addEventListener('click', function(e) {\n      // Handle \"+ Add\" or \"Add to List\" clicks\n      if (e.target.classList.contains('add-to-list') || \n          e.target.textContent.includes('+ Add')) {\n        e.preventDefault();\n        \n        let value = '';\n        let targetField = '';\n        \n        // Get value from data attribute or parent\n        if (e.target.hasAttribute('data-value')) {\n          value = e.target.getAttribute('data-value');\n        } else {\n          const chip = e.target.closest('.example-chip, .tag--example');\n          if (chip) {\n            value = chip.getAttribute('data-value');\n            targetField = chip.getAttribute('data-target');\n          }\n        }\n        \n        if (!value) return;\n        \n        // If it's for WHO field or no specific target, add to audience tags\n        if (!targetField || targetField === 'mkcg-who') {\n          if (typeof window.addAudienceTag === 'function') {\n            window.addAudienceTag(value);\n          }\n        } else {\n          // Add to specific field\n          const field = document.getElementById(targetField);\n          if (field) {\n            const currentValue = field.value.trim();\n            if (currentValue && !currentValue.includes(value)) {\n              field.value = currentValue + ', ' + value;\n            } else if (!currentValue) {\n              field.value = value;\n            }\n            field.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n        \n        // Visual feedback\n        const originalText = e.target.textContent;\n        e.target.textContent = '‚úì Added';\n        e.target.style.color = '#4caf50';\n        \n        setTimeout(() => {\n          e.target.textContent = originalText;\n          e.target.style.color = '';\n        }, 1500);\n        \n        updateAuthorityHook();\n        console.log('‚úÖ Added example:', value);\n      }\n    });\n  }\n  \n  /**\n   * Setup live Authority Hook updates\n   */\n  function setupLiveUpdates() {\n    const fields = ['mkcg-who', 'mkcg-result', 'mkcg-when', 'mkcg-how'];\n    \n    fields.forEach(fieldId => {\n      const field = document.getElementById(fieldId);\n      if (field) {\n        field.addEventListener('input', updateAuthorityHook);\n        field.addEventListener('change', updateAuthorityHook);\n      }\n    });\n  }\n  \n  /**\n   * Update Authority Hook display\n   */\n  function updateAuthorityHook() {\n    const who = document.getElementById('mkcg-who')?.value?.trim() || 'your audience';\n    const result = document.getElementById('mkcg-result')?.value?.trim() || 'achieve their goals';\n    const when = document.getElementById('mkcg-when')?.value?.trim() || 'they need help';\n    const how = document.getElementById('mkcg-how')?.value?.trim() || 'through your method';\n    \n    const authorityHook = `I help ${who} ${result} when ${when} ${how}.`;\n    \n    // Update displays\n    const hookDisplay = document.getElementById('topics-generator-authority-hook-text');\n    if (hookDisplay) {\n      hookDisplay.innerHTML = `I help <span class=\"authority-hook__highlight\">${escapeHtml(who)}</span> <span class=\"authority-hook__highlight\">${escapeHtml(result)}</span> when <span class=\"authority-hook__highlight\">${escapeHtml(when)}</span> <span class=\"authority-hook__highlight\">${escapeHtml(how)}</span>.`;\n    }\n    \n    // Update hidden field\n    const hookField = document.getElementById('mkcg-authority-hook');\n    if (hookField) {\n      hookField.value = authorityHook;\n    }\n    \n    console.log('Authority Hook updated:', authorityHook);\n  }\n  \n  /**\n   * Load existing audiences from WHO field\n   */\n  function loadExistingAudiences() {\n    const whoField = document.getElementById('mkcg-who');\n    if (!whoField || !whoField.value.trim()) return;\n    \n    const existingValue = whoField.value.trim();\n    const audiences = existingValue.split(/,\\s*and\\s*|,\\s*/)\n      .map(s => s.trim())\n      .filter(Boolean);\n    \n    audiences.forEach(audience => {\n      if (typeof window.addAudienceTag === 'function') {\n        window.addAudienceTag(audience, true);\n      }\n    });\n    \n    console.log('üì• Loaded existing audiences:', audiences);\n  }\n  \n  /**\n   * Utility function to escape HTML\n   */\n  function escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initAuthorityHookBuilder);\n  } else {\n    initAuthorityHookBuilder();\n  }\n  \n  // Fallback for dynamic content\n  setTimeout(initAuthorityHookBuilder, 500);\n  \n})();\n